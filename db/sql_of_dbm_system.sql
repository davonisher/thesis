-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.company_info
(
    company_id integer NOT NULL DEFAULT nextval('company_info_company_id_seq'::regclass),
    tool_id integer,
    linkedin character varying(255) COLLATE pg_catalog."default",
    number_of_employees character varying(255) COLLATE pg_catalog."default",
    number_of_founders integer,
    cb_rank_company character varying(255) COLLATE pg_catalog."default",
    headquarters_regions character varying(755) COLLATE pg_catalog."default",
    operating_status character varying(255) COLLATE pg_catalog."default",
    company_type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT company_info_pkey PRIMARY KEY (company_id)
);

CREATE TABLE IF NOT EXISTS public.datetimes
(
    date_id integer NOT NULL DEFAULT nextval('datetimes_date_id_seq'::regclass),
    tool_id integer,
    founded_date timestamp without time zone,
    founded_date_precision character varying(50) COLLATE pg_catalog."default",
    period character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT datetimes_pkey PRIMARY KEY (date_id)
);

CREATE TABLE IF NOT EXISTS public.financial_info
(
    financial_id integer NOT NULL DEFAULT nextval('financial_info_financial_id_seq'::regclass),
    tool_id integer,
    price text COLLATE pg_catalog."default",
    freemium character varying(50) COLLATE pg_catalog."default",
    last_funding_date date,
    last_funding_amount numeric(15, 2),
    last_funding_amount_usd numeric(15, 2),
    total_funding_amount numeric(15, 2),
    total_funding_amount_currency character varying(50) COLLATE pg_catalog."default",
    total_funding_amount_currency_usd numeric(15, 2),
    number_of_investors integer,
    number_of_acquisitions integer,
    ipo_status character varying(50) COLLATE pg_catalog."default",
    stock_exchange character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT financial_info_pkey PRIMARY KEY (financial_id)
);

CREATE TABLE IF NOT EXISTS public.financial_ranking
(
    financial_ranking_id integer NOT NULL DEFAULT nextval('financial_ranking_financial_ranking_id_seq'::regclass),
    tool_id integer,
    value numeric,
    CONSTRAINT financial_ranking_pkey PRIMARY KEY (financial_ranking_id)
);

CREATE TABLE IF NOT EXISTS public.review_info
(
    review_info_id integer NOT NULL DEFAULT nextval('review_info_review_info_id_seq'::regclass),
    tool_id integer,
    helpful_count integer,
    all_time_score numeric,
    amount_of_reviews numeric,
    recent_review_score numeric,
    recent_reviews_amount numeric,
    CONSTRAINT review_info_pkey PRIMARY KEY (review_info_id)
);

CREATE TABLE IF NOT EXISTS public.sentiments
(
    sentiment_id integer NOT NULL DEFAULT nextval('sentiments_sentiment_id_seq'::regclass),
    tool_id integer,
    topic_id integer,
    sentiment_value numeric,
    CONSTRAINT sentiments_pkey PRIMARY KEY (sentiment_id)
);

CREATE TABLE IF NOT EXISTS public.tool_category
(
    categories_id integer NOT NULL DEFAULT nextval('tool_category_categories_id_seq'::regclass),
    tool_id integer,
    task character varying(255) COLLATE pg_catalog."default",
    task_id integer,
    category_id integer,
    category_name character varying(255) COLLATE pg_catalog."default",
    description character varying(1000) COLLATE pg_catalog."default",
    CONSTRAINT tool_category_pkey PRIMARY KEY (categories_id)
);

CREATE TABLE IF NOT EXISTS public.tool_descriptions
(
    description_id integer NOT NULL DEFAULT nextval('tool_descriptions_description_id_seq'::regclass),
    tool_id integer,
    description_text text COLLATE pg_catalog."default",
    description_old text COLLATE pg_catalog."default",
    CONSTRAINT tool_descriptions_pkey PRIMARY KEY (description_id)
);

CREATE TABLE IF NOT EXISTS public.tool_info
(
    tool_id integer NOT NULL,
    saves numeric,
    likes numeric,
    stars numeric,
    name_format character varying(255) COLLATE pg_catalog."default",
    url_format character varying(255) COLLATE pg_catalog."default",
    url_or character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT tool_info_pkey PRIMARY KEY (tool_id)
);

CREATE TABLE IF NOT EXISTS public.topics
(
    topic_id integer NOT NULL DEFAULT nextval('topics_topic_id_seq'::regclass),
    tool_id integer,
    topic_name character varying(255) COLLATE pg_catalog."default",
    topic_description text COLLATE pg_catalog."default",
    topic_value numeric,
    CONSTRAINT topics_pkey PRIMARY KEY (topic_id)
);

CREATE TABLE IF NOT EXISTS public.traffic_data
(
    traffic_id integer NOT NULL DEFAULT nextval('traffic_data_traffic_id_seq'::regclass),
    tool_id integer,
    average_visits numeric,
    CONSTRAINT traffic_data_pkey PRIMARY KEY (traffic_id)
);

CREATE TABLE IF NOT EXISTS public.traffic_ranking
(
    traffic_ranking_id integer NOT NULL DEFAULT nextval('traffic_ranking_traffic_ranking_id_seq'::regclass),
    tool_id integer,
    value numeric,
    CONSTRAINT traffic_ranking_pkey PRIMARY KEY (traffic_ranking_id)
);

CREATE TABLE IF NOT EXISTS public.user_rankings
(
    user_ranking_id integer NOT NULL DEFAULT nextval('user_rankings_user_ranking_id_seq'::regclass),
    tool_id integer,
    value numeric,
    CONSTRAINT user_rankings_pkey PRIMARY KEY (user_ranking_id)
);

CREATE TABLE IF NOT EXISTS public.user_reviews
(
    review_id integer NOT NULL DEFAULT nextval('user_reviews_review_id_seq'::regclass),
    tool_id integer,
    review_text text COLLATE pg_catalog."default",
    review_date date,
    helpful_count numeric,
    CONSTRAINT user_reviews_pkey PRIMARY KEY (review_id)
);

ALTER TABLE IF EXISTS public.company_info
    ADD CONSTRAINT company_info_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.datetimes
    ADD CONSTRAINT datetimes_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.financial_info
    ADD CONSTRAINT financial_info_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.financial_ranking
    ADD CONSTRAINT financial_ranking_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.review_info
    ADD CONSTRAINT review_info_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sentiments
    ADD CONSTRAINT sentiments_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.sentiments
    ADD CONSTRAINT sentiments_topic_id_fkey FOREIGN KEY (topic_id)
    REFERENCES public.topics (topic_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tool_category
    ADD CONSTRAINT tool_category_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.tool_descriptions
    ADD CONSTRAINT tool_descriptions_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.topics
    ADD CONSTRAINT topics_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.traffic_data
    ADD CONSTRAINT traffic_data_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.traffic_ranking
    ADD CONSTRAINT traffic_ranking_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_rankings
    ADD CONSTRAINT user_rankings_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_reviews
    ADD CONSTRAINT user_reviews_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;