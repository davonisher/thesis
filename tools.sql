-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.company_info
(
    company_id integer NOT NULL DEFAULT nextval('company_info_company_id_seq'::regclass),
    tool_id integer,
    linkedin character varying(255) COLLATE pg_catalog."default",
    number_of_employees integer,
    number_of_founders integer,
    cb_rank_company character varying(255) COLLATE pg_catalog."default",
    headquarters_regions character varying(255) COLLATE pg_catalog."default",
    operating_status character varying(255) COLLATE pg_catalog."default",
    company_type character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT company_info_pkey PRIMARY KEY (company_id)
);

CREATE TABLE IF NOT EXISTS public.datetimes
(
    date_id integer NOT NULL DEFAULT nextval('datetimes_date_id_seq'::regclass),
    tool_id integer,
    founded_date timestamp without time zone,
    founded_date_precision character varying(50) COLLATE pg_catalog."default",
    period character varying(25) COLLATE pg_catalog."default",
    CONSTRAINT datetimes_pkey PRIMARY KEY (date_id)
);

CREATE TABLE IF NOT EXISTS public.financial_info
(
    financial_id integer NOT NULL DEFAULT nextval('financial_info_financial_id_seq'::regclass),
    tool_id integer,
    price numeric,
    freemium character varying(50) COLLATE pg_catalog."default",
    number_funding_rounds integer,
    last_funding_date timestamp without time zone,
    last_funding_amount numeric,
    last_funding_amount_usd numeric,
    total_funding_amount numeric,
    total_funding_amount_currency character varying(50) COLLATE pg_catalog."default",
    total_funding_amount_currency_usd numeric,
    number_of_investors integer,
    number_of_acquisitions integer,
    ipo_status character varying(50) COLLATE pg_catalog."default",
    ipo_date timestamp without time zone,
    stock_exchange character varying(50) COLLATE pg_catalog."default",
    CONSTRAINT financial_info_pkey PRIMARY KEY (financial_id)
);

CREATE TABLE IF NOT EXISTS public.financial_ranking
(
    financial_ranking_id integer NOT NULL DEFAULT nextval('financial_ranking_financial_ranking_id_seq'::regclass),
    ranking_id integer,
    CONSTRAINT financial_ranking_pkey PRIMARY KEY (financial_ranking_id)
);

CREATE TABLE IF NOT EXISTS public.images_websites
(
    image_id integer NOT NULL DEFAULT nextval('images_websites_image_id_seq'::regclass),
    tool_id integer,
    image_url character varying(255) COLLATE pg_catalog."default",
    image_data bytea,
    CONSTRAINT images_websites_pkey PRIMARY KEY (image_id),
    CONSTRAINT images_websites_tool_id_key UNIQUE (tool_id)
);

CREATE TABLE IF NOT EXISTS public.job_info_ta
(
    job_info_id integer NOT NULL DEFAULT nextval('job_info_ta_job_info_id_seq'::regclass),
    tool_id integer,
    job_title character varying(255) COLLATE pg_catalog."default",
    impact character varying(255) COLLATE pg_catalog."default",
    amount_of_tasks text COLLATE pg_catalog."default",
    amount_of_tools integer,
    CONSTRAINT job_info_ta_pkey PRIMARY KEY (job_info_id)
);

CREATE TABLE IF NOT EXISTS public.rankings
(
    ranking_id integer NOT NULL DEFAULT nextval('rankings_ranking_id_seq'::regclass),
    tool_id integer,
    ranking_type character varying(255) COLLATE pg_catalog."default",
    ranking_score numeric,
    CONSTRAINT rankings_pkey PRIMARY KEY (ranking_id)
);

CREATE TABLE IF NOT EXISTS public.review_info
(
    review_id integer NOT NULL,
    helpful_count integer,
    all_time_score numeric,
    amount_of_reviews integer,
    recent_review_score numeric,
    recent_reviews_amount integer,
    user_id integer,
    CONSTRAINT review_info_pkey PRIMARY KEY (review_id)
);

CREATE TABLE IF NOT EXISTS public.task_category
(
    task_cat_id integer NOT NULL DEFAULT nextval('task_category_task_cat_id_seq'::regclass),
    task_id integer,
    task character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT task_category_pkey PRIMARY KEY (task_cat_id)
);

CREATE TABLE IF NOT EXISTS public.tool_category
(
    tool_id integer NOT NULL,
    task_id integer,
    use_case character varying(255) COLLATE pg_catalog."default",
    vertical character varying(255) COLLATE pg_catalog."default",
    business_unit character varying(255) COLLATE pg_catalog."default",
    application_type character varying(255) COLLATE pg_catalog."default",
    industries character varying(255) COLLATE pg_catalog."default",
    industry_groups character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT tool_category_pkey PRIMARY KEY (tool_id),
    CONSTRAINT tool_category_task_id_key UNIQUE (task_id)
);

CREATE TABLE IF NOT EXISTS public.tool_descriptions
(
    description_id integer NOT NULL DEFAULT nextval('tool_descriptions_description_id_seq'::regclass),
    tool_id integer,
    description_text text COLLATE pg_catalog."default",
    generated_date timestamp without time zone,
    description_old text COLLATE pg_catalog."default",
    CONSTRAINT tool_descriptions_pkey PRIMARY KEY (description_id)
);

CREATE TABLE IF NOT EXISTS public.tool_info
(
    tool_id integer NOT NULL DEFAULT nextval('tool_info_tool_id_seq'::regclass),
    saves integer,
    likes integer,
    stars numeric,
    name_format character varying(255) COLLATE pg_catalog."default",
    url_format character varying(255) COLLATE pg_catalog."default",
    url_or character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT tool_info_pkey PRIMARY KEY (tool_id)
);

CREATE TABLE IF NOT EXISTS public.topics
(
    topic_id integer NOT NULL DEFAULT nextval('topics_topic_id_seq'::regclass),
    tool_id integer,
    topic_description text COLLATE pg_catalog."default",
    task_cat_id integer,
    sentiment_score_sentence numeric,
    sentiment_score_review numeric,
    CONSTRAINT topics_pkey PRIMARY KEY (topic_id)
);

CREATE TABLE IF NOT EXISTS public.traffic_data
(
    traffic_id integer NOT NULL DEFAULT nextval('traffic_data_traffic_id_seq'::regclass),
    tool_id integer,
    month integer,
    average_visits numeric,
    change_prct numeric,
    last_month_with_visitors character varying(255) COLLATE pg_catalog."default",
    average_until_last_month numeric,
    CONSTRAINT traffic_data_pkey PRIMARY KEY (traffic_id)
);

CREATE TABLE IF NOT EXISTS public.traffic_ranking
(
    traffic_ranking_id integer NOT NULL DEFAULT nextval('traffic_ranking_traffic_ranking_id_seq'::regclass),
    ranking_id integer,
    CONSTRAINT traffic_ranking_pkey PRIMARY KEY (traffic_ranking_id)
);

CREATE TABLE IF NOT EXISTS public.user_ranking
(
    user_ranking_id integer NOT NULL DEFAULT nextval('user_ranking_user_ranking_id_seq'::regclass),
    ranking_id integer,
    CONSTRAINT user_ranking_pkey PRIMARY KEY (user_ranking_id)
);

CREATE TABLE IF NOT EXISTS public.user_reviews
(
    review_id integer NOT NULL DEFAULT nextval('user_reviews_review_id_seq'::regclass),
    tool_id integer,
    review_text text COLLATE pg_catalog."default",
    sentiment numeric,
    review_date timestamp without time zone,
    helpful_count integer,
    CONSTRAINT user_reviews_pkey PRIMARY KEY (review_id)
);

ALTER TABLE IF EXISTS public.company_info
    ADD CONSTRAINT company_info_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.datetimes
    ADD CONSTRAINT datetimes_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.financial_info
    ADD CONSTRAINT financial_info_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.financial_ranking
    ADD CONSTRAINT financial_ranking_ranking_id_fkey FOREIGN KEY (ranking_id)
    REFERENCES public.rankings (ranking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.images_websites
    ADD CONSTRAINT images_websites_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS images_websites_tool_id_key
    ON public.images_websites(tool_id);


ALTER TABLE IF EXISTS public.job_info_ta
    ADD CONSTRAINT job_info_ta_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.rankings
    ADD CONSTRAINT rankings_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.review_info
    ADD CONSTRAINT review_info_review_id_fkey FOREIGN KEY (review_id)
    REFERENCES public.user_reviews (review_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS review_info_pkey
    ON public.review_info(review_id);


ALTER TABLE IF EXISTS public.task_category
    ADD CONSTRAINT task_category_task_id_fkey FOREIGN KEY (task_id)
    REFERENCES public.tool_category (task_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.tool_category
    ADD CONSTRAINT tool_category_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS tool_category_pkey
    ON public.tool_category(tool_id);


ALTER TABLE IF EXISTS public.tool_descriptions
    ADD CONSTRAINT tool_descriptions_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.topics
    ADD CONSTRAINT topics_task_cat_id_fkey FOREIGN KEY (task_cat_id)
    REFERENCES public.task_category (task_cat_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.topics
    ADD CONSTRAINT topics_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.traffic_data
    ADD CONSTRAINT traffic_data_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.traffic_ranking
    ADD CONSTRAINT traffic_ranking_ranking_id_fkey FOREIGN KEY (ranking_id)
    REFERENCES public.rankings (ranking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_ranking
    ADD CONSTRAINT user_ranking_ranking_id_fkey FOREIGN KEY (ranking_id)
    REFERENCES public.rankings (ranking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.user_reviews
    ADD CONSTRAINT user_reviews_tool_id_fkey FOREIGN KEY (tool_id)
    REFERENCES public.tool_info (tool_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;